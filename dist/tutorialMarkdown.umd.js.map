{"version":3,"file":"tutorialMarkdown.umd.js","sources":["../src/codeBlock.js","../src/codeManager.js","../src/editorManager.js","../src/iframeManager.js","../src/index.js"],"sourcesContent":["class CodeBlock {\n  constructor(element, codeSelector, tabSize) {\n    this.element = element\n    this.from = parseInt(element.getAttribute('data-from'))\n    this.to = element.getAttribute('data-to')\n    this.indent = parseInt(element.getAttribute('data-indent')) || 0\n\n    this.code = this.prepareCode(element.querySelector(codeSelector).innerText, tabSize)\n    this.lines = this.code.split('\\n').length\n\n    // Set \"TO\" value to from + lines it isn't set\n    this.to = this.to ? parseInt(this.to) : this.from + this.lines \n  }\n\n  prepareCode(code, tabSize) {\n    let parsedCode = code.split('\\n')\n    \n    // Add indentation\n    parsedCode = parsedCode.map(\n      string => {\n        if( string !== ''){\n          return ' '.repeat(tabSize * this.indent) + string\n        } else {\n          return string\n        }\n      }\n    )\n\n    return parsedCode.join('\\n')\n  }\n\n  shouldBeActive() {\n    const rect = this.element.getBoundingClientRect()\n\n    // 1/3 of rect is at 1/2 of window\n    return (rect.y + rect.height/3) < (window.innerHeight / 2)\n  }\n}\n\nexport default CodeBlock","import CodeBlock from './codeBlock'\n\nclass CodeManager {\n\n  constructor(options) {\n    this.codeBlocks = []\n    const {blockSelector, codeSelector} = options.selectors\n\n    this.blockSelector = options.blockSelector\n\n    let blockElements = document.querySelectorAll(blockSelector)\n    for( let i = 0; i < blockElements.length; i++ ) {\n      this.codeBlocks.push(new CodeBlock(blockElements[i], codeSelector, options.tabSize))\n    }\n  }\n\n  getStep() {\n    for( let i = this.codeBlocks.length - 1; i >= 0; i-- ) {\n      if( this.codeBlocks[i].shouldBeActive() ) {\n        return i\n      }\n    }\n    return -1\n  }\n\n  getBlockByStep(step) {\n    return this.codeBlocks[step]\n  }\n}\n\nexport default CodeManager","\nclass EditorManager {\n\n  constructor(options) {\n    this.hasTyped = false\n    this.lastExecuted = null\n\n    const {editor} = options\n    this.editor = editor.editor\n    this.api = editor.api\n\n    this.editor.onKeyDown(() => {\n      this.hasTyped = true\n    })\n  }\n\n  executeBlock(block) {\n\n    if(this.hasTyped) {\n      this.replaceWith(this.lastExecuted)\n    }\n\n    // If we are trying to append beyond the current line count, add the lines\n    const lineCount = this.editor.getModel().getLineCount()\n    if(lineCount < block.from) {\n      const linesNeeded = block.from - lineCount\n      const range = new this.api.Range(block.from, 1, block.from + linesNeeded, 1)\n      const newLines = '\\n'.repeat(linesNeeded)\n      const operation = {\n        identifier: { major: 1, minor: 1 },\n        range: range,\n        text: newLines,\n        forceMoveMarkers: true\n      }\n\n      this.editor.executeEdits(newLines, [operation])\n    }\n\n    const range = new this.api.Range(block.from, 1, block.to, 1)\n    const operation = {\n      identifier: { major: 1, minor: 1 },\n      range: range,\n      text: block.code,\n      forceMoveMarkers: true\n    }\n    \n    this.editor.executeEdits(block.code, [operation])\n    this.editor.revealLines(\n      block.from,\n      block.from + block.lines\n    )\n\n    // Save last state (to undo any manually typed code)\n    this.lastExecuted = this.getCode()\n  }\n\n  replaceWith(code) {\n    const range = new this.api.Range(0, 1, 9999, 1)\n    const operation = {\n      identifier: { major: 1, minor: 1 },\n      range: range,\n      text: code,\n      forceMoveMarkers: true\n    }\n    this.editor.executeEdits(code, [operation])\n  }\n\n  getCode() {\n    return this.editor.getValue()\n  }\n}\n\nexport default EditorManager","class IframeManager {\n\n  constructor(options) {\n    this.iframe = options.iframe\n  }\n\n  sendCode(code) {\n    this.iframe.contentWindow.postMessage(code, '*')\n  }\n}\n\nexport default IframeManager","import CodeManager from './codeManager'\nimport EditorManager from './editorManager'\nimport IframeManager from './iframeManager'\n\nclass TutorialMarkdown {\n\n  constructor(options) {\n\n    const {editor} = options\n    this.scheduled = false\n    this.currentStep = -1\n\n    this.editorManager = new EditorManager({editor})\n    this.iframeManager = new IframeManager({iframe: options.iframe})\n\n    this.codeManager = new CodeManager({\n      selectors: options.markdownSelector,\n      tabSize: editor.editor.getModel()._options.tabSize\n    })\n\n    // Saving the post executed state, so when we step backwards we can\n    // reapply previous set information\n    this.savedSteps = [this.editorManager.getCode()]\n\n    this.throttleScroll = this.throttleScroll.bind(this)\n    this.create()\n  }\n\n  throttleScroll() {\n    if (!this.scheduled) {\n      this.scheduled = true\n      window.requestAnimationFrame(() => {\n        this.scheduled = false\n        this.onScroll()\n      })\n    }\n  }\n\n  onScroll() {\n    const step = this.codeManager.getStep()\n    if(step > this.currentStep) {\n\n      for( let i = this.currentStep + 1; i <= step; i++ ) {\n        this.stepForward(i)\n      }\n      \n    } else if (step < this.currentStep) {\n      this.stepBackward(step)\n    }\n\n    this.currentStep = step\n  }\n\n  stepForward(step) {\n    const block = this.codeManager.getBlockByStep(step)\n    this.editorManager.executeBlock(block)\n\n    const currentCode = this.editorManager.getCode()\n\n    if(!this.savedSteps[step + 1]) {\n      this.savedSteps.push(currentCode)\n    }\n\n    this.iframeManager.sendCode(currentCode)\n\n    return step\n  }\n\n  stepBackward(step) {\n    this.editorManager.replaceWith(this.savedSteps[step + 1])\n    const currentCode = this.editorManager.getCode()\n    this.iframeManager.sendCode(currentCode)\n  }\n\n  create() {\n    window.addEventListener('scroll', this.throttleScroll)\n  }\n\n  destroy() {\n    window.removeEventListener('scroll', this.throttleScroll)\n  }\n}\n\nexport default TutorialMarkdown\n\n\n// // (function() {\n\n//   // Editor variables\n//   var frame = document.querySelector('iframe');\n//   var editor;\n\n//   // Code variables\n//   var contentElement = document.querySelector('.content');\n//   var triggers, blocks, structure, sendItButton, fullCodeSets;\n//   var currentStep = -1;\n//   var hasTyped = false;\n\n//   function setup() {\n//     setupCode();\n//   }\n\n//   function onContentScroll(e) {\n\n//     var hitSteps = -1;\n\n//     for( var i = 0; i < triggers.length; i++) {\n//       var dimensions = triggers[i].getBoundingClientRect();\n//       var headerHeight = 65; // todo, not put here.\n\n//       if( dimensions.y + dimensions.height/3 < ((window.innerHeight - headerHeight) / 2 + headerHeight)) {\n        \n//         if( i === currentStep + 1 ) {\n//           currentStep = i;\n//           onCodeAdd(i);\n//         }\n\n//         hitSteps = i;\n//       }\n//     }\n\n//     if( hitSteps === currentStep - 1) {\n//       currentStep = currentStep - 1;\n//       onCodeRemove(currentStep + 1);\n//       sendCode(currentStep);\n//     }\n//   }\n\n//   function onCodeRemove(step) {\n//     var range = new monaco.Range(0, 1, 999, 1);\n//     var id = { major: 1, minor: 1 };           \n//     var op = {identifier: id, range: range, text: fullCodeSets[step - 1], forceMoveMarkers: true};\n//     editor.executeEdits(fullCodeSets[step - 1], [op]);\n//     hasTyped = false;\n//   }\n\n//   function saveCode(step) {\n\n//     // Only save these ones per each step.\n//     if( !fullCodeSets[step] ) {\n//       fullCodeSets[step] = editor.getValue();\n//     }\n"],"names":["CodeBlock","element","codeSelector","tabSize","from","parseInt","getAttribute","to","indent","code","prepareCode","querySelector","innerText","lines","split","length","parsedCode","map","string","repeat","join","rect","getBoundingClientRect","y","height","window","innerHeight","CodeManager","options","codeBlocks","selectors","blockSelector","blockElements","document","querySelectorAll","i","push","shouldBeActive","step","EditorManager","hasTyped","lastExecuted","editor","api","onKeyDown","block","replaceWith","lineCount","getModel","getLineCount","linesNeeded","range","Range","newLines","operation","identifier","major","minor","text","forceMoveMarkers","executeEdits","revealLines","getCode","getValue","IframeManager","iframe","contentWindow","postMessage","TutorialMarkdown","scheduled","currentStep","editorManager","iframeManager","codeManager","markdownSelector","_options","savedSteps","throttleScroll","bind","create","requestAnimationFrame","onScroll","getStep","stepForward","stepBackward","getBlockByStep","executeBlock","currentCode","sendCode","addEventListener","removeEventListener"],"mappings":"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"}